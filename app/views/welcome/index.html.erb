<div id="tabs">
	<ul>
		<li><a href="#tabs-1">About Us</a></li>
		<li><a href="#tabs-2">FAQs</a></li>
	</ul>
	<div id="tabs-1">
		<p>The purpose of the application is to help those people who are working on the application for doctors, the CDM (developed and maintained by CareSharing) to share information with one another through an informative yet-not-boring documentation of the actual software. Basically, the idea is to make it a wikipedia- like documentation app, but in a way that is more pleasing to the eyes, thereby generating more interest to the user, making the documentation and the sharing of information a lot more effective.</p>

<p>The app has two modes (as of now): Edit and View. 
(1) View Mode: The user is taken to something like what is shown above, a screenshot of the software with annotations (those cute buttons) all around it. Clicking an annotation will show a page which is something like on the right panel. The right panel then shows the 'lessons' or articles that contain discussions about the usage or function of this button or that button, or this part or that part, and some other information. Of course, we won't crowd the user with a lot of unorganized texts, so a link of related topics would be first displayed.</p>

<p>(2) Edit Mode: This lets the user create annotations (to a specific application he wants to document), and then put lessons. Now how are these lessons going to be created? The answer is by using a desktop application called ScreenSteps. Actually, this web application goes hand in hand with this desktop app. Therefore, lessons are created on the desktop using ScreenSteps, and these are going to be somehow uploaded (they say there might be another way) to the web app. The problem is on how do we actually link or connect these two applications together. Well that's something that we have to figure out. </p>
	</div>
	<div id="tabs-2">
		<p>On our last post, we mentioned that the goal of our yet-to-be-named project is to provide documentation for a certain application. To do this, we insert screenshots of that app, determine the areas where information is contained, stick annotations to them, and link those annotations to lessons which would give the user information about that part of the app. But then after a week, we thought of this and that, and asked how about this? and that? then we realized, why not use something more than a screenshot?

When we had a meeting with the big bosses, one of them stated that it would be a nice feature to make the screenshots as real as possible. What that meant was, if the actual app had a link to another part of the program, and if that certain link in the screenshot is clicked, it should be able to do the same thing. We all agreed that the idea was good, however, how to do it? Then one of our faculty interns gave an incredible suggestion (credits to sir eugene): why not incorporate the actual application itself!  After much talk and arguments, we came up with a final decision: scrap the screenshots, we're going live!

Now comes the hardest part, how? The only solution we had in mind was to use, (chedeng!) html iframes -- inline frames. This means, instead of inserting a screenshot, we get the url of the app, put it in one of the iframes, and there we have the live application, as if the user is browsing the real application (which is actually what the user is doing). This is definitely more powerful and cooler than using screenshots but it comes with great price, it's definitely harder to handle. And what's more, this is only a part of our yet-to-be-named project, and there's much much more details to consider and think about. On the positive side, it may be very difficult but it's a start. A start that has an end, hopefully. Good luck to us!</p>
	</div>
</div>
